#!/usr/bin/env node

"use strict";
var path = require('path');
var fs = require('fs');

var lib = path.join(path.dirname(fs.realpathSync(__filename)), '../lib/');

var Kosher = require(lib+'kosher.js').kosher;

var program = require('commander');

program
  .version('0.0.1')
  .usage('[options] [action: sync | config]')
  .option('-v, --verbose', 'Display details about synced features.')
  .option('-l, --list', 'List features.')
  .option('-f, --file <filepath>', 'Config file path [kosher.json]')
  .option('-i, --issue <issue_id>', 'JIRA Issue to sync')
  .parse(process.argv);

if(program.args.length == 0) {
    program.args = ['sync'];
}

var configFilePath = (!!program.file)?program.file:'kosher.json';

if(program.issue) process.env.ISSUE_KEY = program.issue;

try {
    switch(program.args[0]) {
        case "config":
        {
            Kosher.config.configure(configFilePath, function(result){
                return result;
            });
            break;
        }
        case "sync":
        {
            Kosher.sync(configFilePath, function(result){
                return result;
            });
            break;
        }
    }
} catch(e) {
    throw('Error: '+e);
    return 1;
}
